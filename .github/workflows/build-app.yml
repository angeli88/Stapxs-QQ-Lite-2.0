# 在主分支上构建
name: build
on:
  push: # push 触发
    branches:
      - next

jobs:
  # ========================= 准备项目 ========================= 
  init:
    name: 初始化构建
    runs-on: ubuntu-latest
    outputs:
      build_web: ${{ steps.step_init.outputs.BUILD_WEB }}
      build_electron: ${{ steps.step_init.outputs.BUILD_ELECTRON }}
      version: ${{ steps.step_init.outputs.VERSION }}
    steps:
    # 拉取代码
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        persist-credentials: false
    # 初始化一些流程需要的环境变量
    - name: Init Env
      id: step_init
      run: |
        echo 'BUILD_WEB=true' >> $GITHUB_OUTPUT
        echo 'BUILD_ELECTRON=false' >> $GITHUB_OUTPUT
        # 获取版本号
        echo VERSION=$(node -p "require('./package.json').version") >> $GITHUB_OUTPUT
    # 设置 Node.js 版本
    - name: Load Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
    # 更新依赖
    - name: Install
      run: yarn
    # 代码检查
    - name: Lint
      run: yarn lint

  # ========================= 构建 Web 版本 ========================= 
  build-pages:
    name: 构建 Github Pages 版本
    runs-on: ubuntu-latest
    needs: init
    if: needs.init.outputs.build_web == 'true'
    steps:
    # 拉取代码
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        persist-credentials: false
    # 设置 Node.js 版本
    - name: Load Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
    # 更新依赖
    - name: Install
      run: yarn
    # 构建
    - name: Build
      run: yarn build
      env:
        NODEJS_ENV: github-actions

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist

          
